// <auto-generated />
using DTI_Glossary_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DTI_Glossary_App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231204214202_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DTI_Glossary_App.Models.Glossary", b =>
                {
                    b.Property<int>("GlossaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlossaryId"));

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlossaryId");

                    b.ToTable("Glossaries");

                    b.HasData(
                        new
                        {
                            GlossaryId = 1,
                            Definition = "Definition of the glossary number 1",
                            Term = "Gloss1"
                        },
                        new
                        {
                            GlossaryId = 2,
                            Definition = "Definition of the glossary number 2",
                            Term = "Gloss2"
                        },
                        new
                        {
                            GlossaryId = 3,
                            Definition = "Definition of the glossary number 3",
                            Term = "Gloss3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
